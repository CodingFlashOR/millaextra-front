---
import Layout from '../../../layouts/Layout.astro';
---

<Layout title='Display en CSS'>
    <div class="container mx-auto p-6">
        <div class="md:w-1/2 p-2 m-auto">
            <h1 class="text-3xl font-bold text-center text-purple-800 mb-10">Propiedad Display en CSS</h1>
    
            <div class="border border-gray-200 rounded-lg p-4 mt-6">
                <h2 class="text-xl font-bold text-purple-800">Block</h2>
                <p class="text-gray-700">El valor <strong class="text-purple-800">block</strong> de la propiedad `display` hace que un elemento se muestre como un bloque y ocupe todo el ancho disponible. Este tipo de elementos comienzan en una nueva línea y se extienden horizontalmente hasta llenar su contenedor. Los elementos de bloque son ideales para estructurar grandes secciones de contenido en una página web.</p>
            </div>
            
            <div class="border border-gray-200 rounded-lg p-4 mt-6">
                <h2 class="text-xl font-bold text-purple-800">Inline</h2>
                <p class="text-gray-700">Por otro lado, el valor <strong class="text-purple-800">inline</strong> de la propiedad `display` hace que un elemento se muestre en la misma línea que el texto circundante y ocupe solo el espacio necesario. Los elementos en línea son útiles cuando deseas incluir elementos dentro del flujo del texto, como enlaces o resaltes de texto.</p>
            </div>
            
            <div class="border border-gray-200 rounded-lg p-4 mt-6">
                <h2 class="text-xl font-bold text-purple-800">Inline-block</h2>
                <p class="text-gray-700">El valor <strong class="text-purple-800">inline-block</strong> de la propiedad `display` combina características de los dos anteriores. Un elemento con este valor se muestra en la misma línea que el texto, pero se comporta como un bloque, lo que significa que puedes definir tanto el ancho como la altura para el elemento. Esta combinación es útil cuando necesitas colocar elementos en línea con un ancho y alto específicos.</p>
            </div>
            
            <div class="border border-gray-200 rounded-lg p-4 mt-6">
                <h2 class="text-xl font-bold text-purple-800">Otras Opciones</h2>
                <p class="text-gray-700">Además de los tipos principales, existen otros valores más específicos para la propiedad `display`:</p>
                <ul class="list-disc text-gray-700 pl-6">
                    <li>Flex: Ideal para crear diseños flexibles y responsivos.</li>
                    <li>Grid: Proporciona un sistema de cuadrícula bidimensional para organizar elementos.</li>
                    <li>Table: Se utiliza para crear diseños similares a los de una tabla HTML.</li>
                    <li>Flow-root: Establece un nuevo contexto de formato para los elementos secundarios.</li>
                    <li>None: Desactiva la visualización de un elemento por completo.</li>
                </ul>
                <p class="text-gray-700">Cada valor de la propiedad `display` tiene sus propias características y se adapta mejor a diferentes situaciones de diseño. Es importante comprender cómo y cuándo usar cada uno para lograr el diseño deseado en tu página web.</p>
            </div>
            
            <p class="text-gray-700 text-lg mt-6">Recuerda que la elección del valor de display afecta la estructura y el diseño de tu página web. ¡Espero que esta información te sea útil! Si tienes más preguntas, no dudes en preguntar.</p>
            
            <a class="text-purple-800 text-3xl font-bold text-center hover:text-purple-400 block mt-6" href="/frontend/css/flexbox">Flexbox...</a>
        </div>
    </div>
</Layout>